<?php

/**
 * PluginsfOauthServerConsumer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginsfOauthServerConsumer extends BasesfOauthServerConsumer
{
	  	//Surcharges pour gÃ©nÃ©rer la clÃ© publique et privÃ©e
	public function save(Doctrine_Connection $conn = null)
	{
		if ($this->getConsumerKey()=="")
			$this->setConsumerKey(sfOAuthServer::generateConsumerKey($this->getName()));
		if ($this->getConsumerSecret()=="")
			$this->setConsumerSecret(sfOAuthServer::generateConsumerSecret($this->getName()));
			
		$ret = parent::save($conn);
		return $ret;
	}
	
	/**
	 * Check if the user is one of developers
	 * @param integer $userId
	 * @return boolean
	 */
	public function hasDeveloper($userId)
	{
	  foreach ($this->getDevelopers() as $developer)
	    if ($developer->getId()==$userId)
	      return true;
	  return false;
	}
	/**
	 * Add a developer
	 * @param integer $userId
	 * @param boolean $admin
	 */
	public function addDeveloper($userId,$admin = false)
	{
	  if (!$this->hasDeveloper($userId))
	    {
	      $dev = new sfOauthServerDeveloper();
	      $dev->setConsumerId($this->getId());
	      $dev->setUserId($userId);
	      $dev->getAdmin($admin);
	      $dev->save();
	    }
	}
	/**
	 * Del a developer
	 * @param integer $userId
	 */
	public function delDeveloper($userId)
	{
	  if ($this->hasDeveloper($userId))
	    {
	      $developer = Doctrine::getTable('sfOauthServerDeveloper')->createQuery('d')->where('d.consumer_id = ? AND d.user_id = ?',array($this->getId(),$userId))->fetchOne();
	      if ($developer)
		$developer->delete();
	    }
	}
	
	public function getNumberUsers()
	{
	  return Doctrine::getTable('sfOauthServerUserScope')->findByConsumerId($this->getId())->count();
	}
	
	public function increaseNumberQuery()
	{
	  $this->setNumberQuery($this->getNumberQuery()+1);
	  $this->save();
	}
}
