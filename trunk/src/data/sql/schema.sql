CREATE TABLE assignatura (id BIGINT AUTO_INCREMENT, nom VARCHAR(255) NOT NULL, carrera_curs_id BIGINT NOT NULL, INDEX carrera_curs_id_idx (carrera_curs_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE carrera_curs (id BIGINT AUTO_INCREMENT, nom VARCHAR(255) NOT NULL, curs BIGINT NOT NULL, grup_teoria BIGINT NOT NULL, url_horari VARCHAR(255) NOT NULL UNIQUE, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE contingut (id BIGINT AUTO_INCREMENT, nom VARCHAR(255) NOT NULL, action_part TEXT NOT NULL, view_part TEXT NOT NULL, es_contingut TINYINT(1) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE contingut_te_opcio (contingut_id BIGINT, opcio_id BIGINT, PRIMARY KEY(contingut_id, opcio_id)) ENGINE = INNODB;
CREATE TABLE opcio (id BIGINT AUTO_INCREMENT, nom VARCHAR(255) NOT NULL, module VARCHAR(255) NOT NULL, action VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sessio (id BIGINT AUTO_INCREMENT, data_hora_inici DATETIME NOT NULL, data_hora_fi DATETIME NOT NULL, assignatura_id BIGINT NOT NULL, aula VARCHAR(255), tipus VARCHAR(255) NOT NULL, grup_seminari VARCHAR(255), grup_practiques VARCHAR(255), grup_teoria VARCHAR(255), INDEX assignatura_id_idx (assignatura_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE usuari_espia_usuari (usuari_base BIGINT, usuari_objectiu BIGINT, PRIMARY KEY(usuari_base, usuari_objectiu)) ENGINE = INNODB;
CREATE TABLE usuari_te_assignatura (usuari_id BIGINT, assignatura_id BIGINT, grup_practiques VARCHAR(255), grup_seminari VARCHAR(255), grup_teoria VARCHAR(255), PRIMARY KEY(usuari_id, assignatura_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_profile (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, email_new VARCHAR(255) UNIQUE, firstname VARCHAR(255), lastname VARCHAR(255), validate_at DATETIME, validate VARCHAR(33), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX user_id_unique_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_oauth_server_access_token (id BIGINT AUTO_INCREMENT, token VARCHAR(40) NOT NULL UNIQUE, secret VARCHAR(40), consumer_id BIGINT NOT NULL, user_id BIGINT, scope TEXT, expires BIGINT, protocole BIGINT DEFAULT 1, created_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX consumer_id_idx (consumer_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_oauth_server_consumer (id BIGINT AUTO_INCREMENT, consumer_key VARCHAR(40) NOT NULL UNIQUE, consumer_secret VARCHAR(40) NOT NULL UNIQUE, name TEXT NOT NULL, description text NOT NULL, protocole BIGINT DEFAULT 1, base_domain TEXT, callback TEXT, scope TEXT, number_query BIGINT DEFAULT 0, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_oauth_server_developer (id BIGINT AUTO_INCREMENT, consumer_id BIGINT NOT NULL, user_id BIGINT NOT NULL, admin TINYINT(1) DEFAULT '0', INDEX consumer_id_idx (consumer_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_oauth_server_nonce (id BIGINT AUTO_INCREMENT, nonce VARCHAR(40) NOT NULL UNIQUE, created_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_oauth_server_request_token (id BIGINT AUTO_INCREMENT, token VARCHAR(40) NOT NULL UNIQUE, secret VARCHAR(40), consumer_id BIGINT NOT NULL, user_id BIGINT, callback TEXT, scope TEXT, expires BIGINT, protocole BIGINT DEFAULT 1, created_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX consumer_id_idx (consumer_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_oauth_server_user_scope (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, consumer_id BIGINT NOT NULL, scope TEXT, INDEX user_id_idx (user_id), INDEX consumer_id_idx (consumer_id), PRIMARY KEY(id)) ENGINE = INNODB;
ALTER TABLE assignatura ADD CONSTRAINT assignatura_carrera_curs_id_carrera_curs_id FOREIGN KEY (carrera_curs_id) REFERENCES carrera_curs(id) ON DELETE CASCADE;
ALTER TABLE contingut_te_opcio ADD CONSTRAINT contingut_te_opcio_opcio_id_opcio_id FOREIGN KEY (opcio_id) REFERENCES opcio(id) ON DELETE CASCADE;
ALTER TABLE contingut_te_opcio ADD CONSTRAINT contingut_te_opcio_contingut_id_contingut_id FOREIGN KEY (contingut_id) REFERENCES contingut(id) ON DELETE CASCADE;
ALTER TABLE sessio ADD CONSTRAINT sessio_assignatura_id_assignatura_id FOREIGN KEY (assignatura_id) REFERENCES assignatura(id) ON DELETE CASCADE;
ALTER TABLE usuari_espia_usuari ADD CONSTRAINT usuari_espia_usuari_usuari_objectiu_sf_guard_user_id FOREIGN KEY (usuari_objectiu) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE usuari_espia_usuari ADD CONSTRAINT usuari_espia_usuari_usuari_base_sf_guard_user_id FOREIGN KEY (usuari_base) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE usuari_te_assignatura ADD CONSTRAINT usuari_te_assignatura_usuari_id_sf_guard_user_id FOREIGN KEY (usuari_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE usuari_te_assignatura ADD CONSTRAINT usuari_te_assignatura_assignatura_id_assignatura_id FOREIGN KEY (assignatura_id) REFERENCES assignatura(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_profile ADD CONSTRAINT sf_guard_user_profile_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_oauth_server_access_token ADD CONSTRAINT sf_oauth_server_access_token_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_oauth_server_access_token ADD CONSTRAINT scsi FOREIGN KEY (consumer_id) REFERENCES sf_oauth_server_consumer(id) ON DELETE CASCADE;
ALTER TABLE sf_oauth_server_developer ADD CONSTRAINT sf_oauth_server_developer_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_oauth_server_developer ADD CONSTRAINT scsi_1 FOREIGN KEY (consumer_id) REFERENCES sf_oauth_server_consumer(id) ON DELETE CASCADE;
ALTER TABLE sf_oauth_server_request_token ADD CONSTRAINT sf_oauth_server_request_token_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_oauth_server_request_token ADD CONSTRAINT scsi_2 FOREIGN KEY (consumer_id) REFERENCES sf_oauth_server_consumer(id) ON DELETE CASCADE;
ALTER TABLE sf_oauth_server_user_scope ADD CONSTRAINT sf_oauth_server_user_scope_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_oauth_server_user_scope ADD CONSTRAINT scsi_3 FOREIGN KEY (consumer_id) REFERENCES sf_oauth_server_consumer(id) ON DELETE CASCADE;
