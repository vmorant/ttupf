<?php

/**
 * BasesfOauthServerUserScope
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $consumer_id
 * @property string $scope
 * @property sfGuardUser $User
 * @property sfOauthServerConsumer $Consumer
 * 
 * @method integer                getUserId()      Returns the current record's "user_id" value
 * @method integer                getConsumerId()  Returns the current record's "consumer_id" value
 * @method string                 getScope()       Returns the current record's "scope" value
 * @method sfGuardUser            getUser()        Returns the current record's "User" value
 * @method sfOauthServerConsumer  getConsumer()    Returns the current record's "Consumer" value
 * @method sfOauthServerUserScope setUserId()      Sets the current record's "user_id" value
 * @method sfOauthServerUserScope setConsumerId()  Sets the current record's "consumer_id" value
 * @method sfOauthServerUserScope setScope()       Sets the current record's "scope" value
 * @method sfOauthServerUserScope setUser()        Sets the current record's "User" value
 * @method sfOauthServerUserScope setConsumer()    Sets the current record's "Consumer" value
 * 
 * @package    ttupf
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfOauthServerUserScope extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_oauth_server_user_scope');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('consumer_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('scope', 'string', 256, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 256,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasOne('sfOauthServerConsumer as Consumer', array(
             'local' => 'consumer_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));
    }
}